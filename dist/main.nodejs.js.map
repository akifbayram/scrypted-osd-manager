{"version":3,"file":"main.nodejs.js","mappings":"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","sources":["../node_modules/@scrypted/sdk/dist/src/index.js","../node_modules/@scrypted/sdk/dist/src/settings-mixin.js","../node_modules/@scrypted/sdk/dist/src/storage-settings.js","../node_modules/@scrypted/sdk/dist/src|sync","../node_modules/@scrypted/sdk/dist/types/gen/index.js","../../scrypted-homeassistant/src/unitConverter.ts","../src/cameraMixin.ts","../src/main.ts","../src/utils.ts","../external node-commonjs \"module\"","../webpack/bootstrap","../webpack/runtime/hasOwnProperty shorthand","../webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdk = exports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\nconst module_1 = require(\"module\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = exports.sdk.deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = exports.sdk.deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = exports.sdk.deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = exports.sdk.deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        this.nativeId = exports.sdk.systemManager.getDeviceById(this.id).nativeId;\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be discouraged and warned at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && typeof this._deviceState.id === 'string') {\n            this._deviceState = exports.sdk.deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = exports.sdk.deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (exports.sdk.deviceManager.getMixinConsole)\n                this._console = exports.sdk.deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = exports.sdk.deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return exports.sdk.mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return exports.sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return exports.sdk.deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            // @ts-ignore: accessing private property\n            if (!this._deviceState) {\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            }\n            else {\n                // @ts-ignore: accessing private property\n                this._deviceState[state] = value;\n            }\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nexports.sdk = {};\ntry {\n    let loaded = false;\n    try {\n        // todo: remove usage of process.env.SCRYPTED_SDK_MODULE, only existed in prerelease builds.\n        // import.meta is not a reliable way to detect es module support in webpack since webpack\n        // evaluates that to true at runtime.\n        const esModule = process.env.SCRYPTED_SDK_ES_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        const cjsModule = process.env.SCRYPTED_SDK_CJS_MODULE || process.env.SCRYPTED_SDK_MODULE;\n        // @ts-expect-error\n        if (esModule && typeof import.meta !== 'undefined') {\n            // @ts-expect-error\n            const require = (0, module_1.createRequire)(import.meta.url);\n            const sdkModule = require(esModule);\n            Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n            loaded = true;\n        }\n        else if (cjsModule) {\n            // @ts-expect-error\n            if (typeof __non_webpack_require__ !== 'undefined') {\n                // @ts-expect-error\n                const sdkModule = __non_webpack_require__(process.env.SCRYPTED_SDK_MODULE);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n            else {\n                const sdkModule = require(cjsModule);\n                Object.assign(exports.sdk, sdkModule.getScryptedStatic());\n                loaded = true;\n            }\n        }\n    }\n    catch (e) {\n        console.warn(\"failed to load sdk module\", e);\n        throw e;\n    }\n    if (!loaded) {\n        let runtimeAPI;\n        try {\n            runtimeAPI = pluginRuntimeAPI;\n        }\n        catch (e) {\n        }\n        Object.assign(exports.sdk, {\n            log: deviceManager.getDeviceLogger(undefined),\n            deviceManager,\n            endpointManager,\n            mediaManager,\n            systemManager,\n            pluginHostAPI,\n            ...runtimeAPI,\n        });\n    }\n    try {\n        exports.sdk.systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = exports.sdk;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SettingsMixinDeviceBase = void 0;\nconst _1 = __importStar(require(\".\"));\nconst { deviceManager } = _1.default;\nclass SettingsMixinDeviceBase extends _1.MixinDeviceBase {\n    constructor(options) {\n        super(options);\n        this.settingsGroup = options.group;\n        this.settingsGroupKey = options.groupKey;\n        process.nextTick(() => deviceManager.onMixinEvent(this.id, this, _1.ScryptedInterface.Settings, null));\n    }\n    async getSettings() {\n        const settingsPromise = this.mixinDeviceInterfaces.includes(_1.ScryptedInterface.Settings) ? this.mixinDevice.getSettings() : undefined;\n        const mixinSettingsPromise = this.getMixinSettings();\n        const allSettings = [];\n        try {\n            const settings = (await settingsPromise) || [];\n            allSettings.push(...settings);\n        }\n        catch (e) {\n            const name = this.name;\n            const description = `${name} Extension settings failed to load.`;\n            this.console.error(description, e);\n            allSettings.push({\n                key: Math.random().toString(),\n                title: name,\n                value: 'Settings Error',\n                group: 'Errors',\n                description,\n                readonly: true,\n            });\n        }\n        try {\n            const mixinSettings = (await mixinSettingsPromise) || [];\n            for (const setting of mixinSettings) {\n                setting.group = setting.group || this.settingsGroup;\n                setting.key = this.settingsGroupKey + ':' + setting.key;\n            }\n            allSettings.push(...mixinSettings);\n        }\n        catch (e) {\n            const name = deviceManager.getDeviceState(this.mixinProviderNativeId).name;\n            const description = `${name} Extension settings failed to load.`;\n            this.console.error(description, e);\n            allSettings.push({\n                key: Math.random().toString(),\n                title: name,\n                value: 'Settings Error',\n                group: 'Errors',\n                description,\n                readonly: true,\n            });\n        }\n        return allSettings;\n    }\n    async putSetting(key, value) {\n        const prefix = this.settingsGroupKey + ':';\n        if (!key?.startsWith(prefix)) {\n            return this.mixinDevice.putSetting(key, value);\n        }\n        if (!await this.putMixinSetting(key.substring(prefix.length), value))\n            deviceManager.onMixinEvent(this.id, this, _1.ScryptedInterface.Settings, null);\n    }\n    async release() {\n        await deviceManager.onMixinEvent(this.id, this, _1.ScryptedInterface.Settings, null);\n    }\n}\nexports.SettingsMixinDeviceBase = SettingsMixinDeviceBase;\n//# sourceMappingURL=settings-mixin.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageSettings = void 0;\nconst _1 = __importStar(require(\".\"));\nconst { systemManager } = _1.default;\nfunction parseValue(value, setting, readDefaultValue, rawDevice) {\n    if (value === null || value === undefined) {\n        return readDefaultValue();\n    }\n    const type = setting.multiple ? 'array' : setting.type;\n    if (type === 'boolean') {\n        if (value === 'true')\n            return true;\n        if (value === 'false')\n            return false;\n        return readDefaultValue() || false;\n    }\n    if (type === 'number') {\n        const n = parseFloat(value);\n        if (!isNaN(n))\n            return n;\n        return readDefaultValue() || 0;\n    }\n    if (type === 'integer') {\n        const n = parseInt(value);\n        if (!isNaN(n))\n            return n;\n        return readDefaultValue() || 0;\n    }\n    if (type === 'array') {\n        if (!value)\n            return readDefaultValue() || [];\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return readDefaultValue() || [];\n        }\n    }\n    if (type === 'device') {\n        if (rawDevice)\n            return value;\n        return systemManager.getDeviceById(value) || systemManager.getDeviceById(readDefaultValue());\n    }\n    // string type, so check if it is json.\n    if (value && setting.json) {\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return readDefaultValue();\n        }\n    }\n    return value || readDefaultValue();\n}\nclass StorageSettings {\n    constructor(device, settings) {\n        this.device = device;\n        this.settings = settings;\n        this.values = {};\n        this.hasValue = {};\n        for (const key of Object.keys(settings)) {\n            const setting = settings[key];\n            const rawGet = () => this.getItem(key);\n            let get;\n            if (setting.type !== 'clippath') {\n                get = rawGet;\n            }\n            else {\n                // maybe need a mapPut. clippath is the only complex type at the moment.\n                get = () => {\n                    try {\n                        return JSON.parse(rawGet());\n                    }\n                    catch (e) {\n                    }\n                };\n            }\n            Object.defineProperty(this.values, key, {\n                get,\n                set: value => this.putSetting(key, value),\n                enumerable: true,\n            });\n            Object.defineProperty(this.hasValue, key, {\n                get: () => this.device.storage.getItem(key) != null,\n                enumerable: true,\n            });\n        }\n    }\n    get keys() {\n        const ret = {};\n        for (const key of Object.keys(this.settings)) {\n            ret[key] = key;\n        }\n        return ret;\n    }\n    async getSettings() {\n        const onGet = await this.options?.onGet?.();\n        const ret = [];\n        for (const [key, setting] of Object.entries(this.settings)) {\n            let s = Object.assign({}, setting);\n            if (onGet?.[key])\n                s = Object.assign(s, onGet[key]);\n            if (s.onGet)\n                s = Object.assign(s, await s.onGet());\n            if (s.hide || await this.options?.hide?.[key]?.())\n                continue;\n            s.key = key;\n            s.value = this.getItemInternal(key, s, true);\n            if (typeof s.deviceFilter === 'function')\n                s.deviceFilter = s.deviceFilter.toString();\n            ret.push(s);\n            delete s.onPut;\n            delete s.onGet;\n            delete s.mapPut;\n            delete s.mapGet;\n        }\n        return ret;\n    }\n    async putSetting(key, value) {\n        const setting = this.settings[key];\n        let oldValue;\n        if (setting)\n            oldValue = this.getItemInternal(key, setting);\n        return this.putSettingInternal(setting, oldValue, key, value);\n    }\n    putSettingInternal(setting, oldValue, key, value) {\n        if (!setting?.noStore) {\n            if (setting?.mapPut)\n                value = setting.mapPut(oldValue, value);\n            // nullish values should be removed, since Storage can't persist them correctly.\n            if (value == null)\n                this.device.storage.removeItem(key);\n            else if (typeof value === 'object')\n                this.device.storage.setItem(key, JSON.stringify(value));\n            else\n                this.device.storage.setItem(key, value?.toString());\n        }\n        setting?.onPut?.(oldValue, value);\n        if (!setting?.hide)\n            this.device.onDeviceEvent(_1.ScryptedInterface.Settings, undefined);\n    }\n    getItemInternal(key, setting, rawDevice) {\n        if (!setting)\n            return this.device.storage.getItem(key);\n        const readDefaultValue = () => {\n            if (setting.persistedDefaultValue != null) {\n                this.putSettingInternal(setting, undefined, key, setting.persistedDefaultValue);\n                return setting.persistedDefaultValue;\n            }\n            return setting.defaultValue;\n        };\n        const ret = parseValue(this.device.storage.getItem(key), setting, readDefaultValue, rawDevice);\n        return setting.mapGet ? setting.mapGet(ret) : ret;\n    }\n    getItem(key) {\n        return this.getItemInternal(key, this.settings[key]);\n    }\n}\nexports.StorageSettings = StorageSettings;\n//# sourceMappingURL=storage-settings.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 891;\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.AirPurifierMode = exports.AirPurifierStatus = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.3.108\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"scryptedRuntimeArguments\"] = \"scryptedRuntimeArguments\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"buttons\"] = \"buttons\";\n    ScryptedInterfaceProperty[\"sensors\"] = \"sensors\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"audioVolumes\"] = \"audioVolumes\";\n    ScryptedInterfaceProperty[\"recordingActive\"] = \"recordingActive\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"converters\"] = \"converters\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"sleeping\"] = \"sleeping\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"airPurifierState\"] = \"airPurifierState\";\n    ScryptedInterfaceProperty[\"filterChangeIndication\"] = \"filterChangeIndication\";\n    ScryptedInterfaceProperty[\"filterLifeLevel\"] = \"filterLifeLevel\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n    ScryptedInterfaceProperty[\"systemDevice\"] = \"systemDevice\";\n})(ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"pressButton\"] = \"pressButton\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"setAudioVolumes\"] = \"setAudioVolumes\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getPrivacyMasks\"] = \"getPrivacyMasks\";\n    ScryptedInterfaceMethod[\"setPrivacyMasks\"] = \"setPrivacyMasks\";\n    ScryptedInterfaceMethod[\"getVideoTextOverlays\"] = \"getVideoTextOverlays\";\n    ScryptedInterfaceMethod[\"setVideoTextOverlay\"] = \"setVideoTextOverlay\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"deleteRecordingStream\"] = \"deleteRecordingStream\";\n    ScryptedInterfaceMethod[\"setRecordingActive\"] = \"setRecordingActive\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"reboot\"] = \"reboot\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"convertMedia\"] = \"convertMedia\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"setAirPurifierState\"] = \"setAirPurifierState\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"forkInterface\"] = \"forkInterface\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n    ScryptedInterfaceMethod[\"connectStream\"] = \"connectStream\";\n    ScryptedInterfaceMethod[\"getTTYSettings\"] = \"getTTYSettings\";\n})(ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    \"ScryptedDevice\": {\n        \"name\": \"ScryptedDevice\",\n        \"methods\": [\n            \"listen\",\n            \"probe\",\n            \"setMixins\",\n            \"setName\",\n            \"setRoom\",\n            \"setType\"\n        ],\n        \"properties\": [\n            \"id\",\n            \"info\",\n            \"interfaces\",\n            \"mixins\",\n            \"name\",\n            \"nativeId\",\n            \"pluginId\",\n            \"providedInterfaces\",\n            \"providedName\",\n            \"providedRoom\",\n            \"providedType\",\n            \"providerId\",\n            \"room\",\n            \"type\"\n        ]\n    },\n    \"ScryptedPlugin\": {\n        \"name\": \"ScryptedPlugin\",\n        \"methods\": [\n            \"getPluginJson\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedPluginRuntime\": {\n        \"name\": \"ScryptedPluginRuntime\",\n        \"methods\": [],\n        \"properties\": [\n            \"scryptedRuntimeArguments\"\n        ]\n    },\n    \"OnOff\": {\n        \"name\": \"OnOff\",\n        \"methods\": [\n            \"turnOff\",\n            \"turnOn\"\n        ],\n        \"properties\": [\n            \"on\"\n        ]\n    },\n    \"Brightness\": {\n        \"name\": \"Brightness\",\n        \"methods\": [\n            \"setBrightness\"\n        ],\n        \"properties\": [\n            \"brightness\"\n        ]\n    },\n    \"ColorSettingTemperature\": {\n        \"name\": \"ColorSettingTemperature\",\n        \"methods\": [\n            \"getTemperatureMaxK\",\n            \"getTemperatureMinK\",\n            \"setColorTemperature\"\n        ],\n        \"properties\": [\n            \"colorTemperature\"\n        ]\n    },\n    \"ColorSettingRgb\": {\n        \"name\": \"ColorSettingRgb\",\n        \"methods\": [\n            \"setRgb\"\n        ],\n        \"properties\": [\n            \"rgb\"\n        ]\n    },\n    \"ColorSettingHsv\": {\n        \"name\": \"ColorSettingHsv\",\n        \"methods\": [\n            \"setHsv\"\n        ],\n        \"properties\": [\n            \"hsv\"\n        ]\n    },\n    \"Buttons\": {\n        \"name\": \"Buttons\",\n        \"methods\": [],\n        \"properties\": [\n            \"buttons\"\n        ]\n    },\n    \"PressButtons\": {\n        \"name\": \"PressButtons\",\n        \"methods\": [\n            \"pressButton\"\n        ],\n        \"properties\": []\n    },\n    \"Sensors\": {\n        \"name\": \"Sensors\",\n        \"methods\": [],\n        \"properties\": [\n            \"sensors\"\n        ]\n    },\n    \"Notifier\": {\n        \"name\": \"Notifier\",\n        \"methods\": [\n            \"sendNotification\"\n        ],\n        \"properties\": []\n    },\n    \"StartStop\": {\n        \"name\": \"StartStop\",\n        \"methods\": [\n            \"start\",\n            \"stop\"\n        ],\n        \"properties\": [\n            \"running\"\n        ]\n    },\n    \"Pause\": {\n        \"name\": \"Pause\",\n        \"methods\": [\n            \"pause\",\n            \"resume\"\n        ],\n        \"properties\": [\n            \"paused\"\n        ]\n    },\n    \"Dock\": {\n        \"name\": \"Dock\",\n        \"methods\": [\n            \"dock\"\n        ],\n        \"properties\": [\n            \"docked\"\n        ]\n    },\n    \"TemperatureSetting\": {\n        \"name\": \"TemperatureSetting\",\n        \"methods\": [\n            \"setTemperature\"\n        ],\n        \"properties\": [\n            \"temperatureSetting\"\n        ]\n    },\n    \"Thermometer\": {\n        \"name\": \"Thermometer\",\n        \"methods\": [\n            \"setTemperatureUnit\"\n        ],\n        \"properties\": [\n            \"temperature\",\n            \"temperatureUnit\"\n        ]\n    },\n    \"HumiditySensor\": {\n        \"name\": \"HumiditySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"humidity\"\n        ]\n    },\n    \"Camera\": {\n        \"name\": \"Camera\",\n        \"methods\": [\n            \"getPictureOptions\",\n            \"takePicture\"\n        ],\n        \"properties\": []\n    },\n    \"Microphone\": {\n        \"name\": \"Microphone\",\n        \"methods\": [\n            \"getAudioStream\"\n        ],\n        \"properties\": []\n    },\n    \"AudioVolumeControl\": {\n        \"name\": \"AudioVolumeControl\",\n        \"methods\": [\n            \"setAudioVolumes\"\n        ],\n        \"properties\": [\n            \"audioVolumes\"\n        ]\n    },\n    \"Display\": {\n        \"name\": \"Display\",\n        \"methods\": [\n            \"startDisplay\",\n            \"stopDisplay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCamera\": {\n        \"name\": \"VideoCamera\",\n        \"methods\": [\n            \"getVideoStream\",\n            \"getVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraMask\": {\n        \"name\": \"VideoCameraMask\",\n        \"methods\": [\n            \"getPrivacyMasks\",\n            \"setPrivacyMasks\"\n        ],\n        \"properties\": []\n    },\n    \"VideoTextOverlays\": {\n        \"name\": \"VideoTextOverlays\",\n        \"methods\": [\n            \"getVideoTextOverlays\",\n            \"setVideoTextOverlay\"\n        ],\n        \"properties\": []\n    },\n    \"VideoRecorder\": {\n        \"name\": \"VideoRecorder\",\n        \"methods\": [\n            \"getRecordingStream\",\n            \"getRecordingStreamCurrentTime\",\n            \"getRecordingStreamOptions\",\n            \"getRecordingStreamThumbnail\"\n        ],\n        \"properties\": [\n            \"recordingActive\"\n        ]\n    },\n    \"VideoRecorderManagement\": {\n        \"name\": \"VideoRecorderManagement\",\n        \"methods\": [\n            \"deleteRecordingStream\",\n            \"setRecordingActive\"\n        ],\n        \"properties\": []\n    },\n    \"PanTiltZoom\": {\n        \"name\": \"PanTiltZoom\",\n        \"methods\": [\n            \"ptzCommand\"\n        ],\n        \"properties\": [\n            \"ptzCapabilities\"\n        ]\n    },\n    \"EventRecorder\": {\n        \"name\": \"EventRecorder\",\n        \"methods\": [\n            \"getRecordedEvents\"\n        ],\n        \"properties\": []\n    },\n    \"VideoClips\": {\n        \"name\": \"VideoClips\",\n        \"methods\": [\n            \"getVideoClip\",\n            \"getVideoClips\",\n            \"getVideoClipThumbnail\",\n            \"removeVideoClips\"\n        ],\n        \"properties\": []\n    },\n    \"VideoCameraConfiguration\": {\n        \"name\": \"VideoCameraConfiguration\",\n        \"methods\": [\n            \"setVideoStreamOptions\"\n        ],\n        \"properties\": []\n    },\n    \"Intercom\": {\n        \"name\": \"Intercom\",\n        \"methods\": [\n            \"startIntercom\",\n            \"stopIntercom\"\n        ],\n        \"properties\": []\n    },\n    \"Lock\": {\n        \"name\": \"Lock\",\n        \"methods\": [\n            \"lock\",\n            \"unlock\"\n        ],\n        \"properties\": [\n            \"lockState\"\n        ]\n    },\n    \"PasswordStore\": {\n        \"name\": \"PasswordStore\",\n        \"methods\": [\n            \"addPassword\",\n            \"getPasswords\",\n            \"removePassword\"\n        ],\n        \"properties\": []\n    },\n    \"Scene\": {\n        \"name\": \"Scene\",\n        \"methods\": [\n            \"activate\",\n            \"deactivate\",\n            \"isReversible\"\n        ],\n        \"properties\": []\n    },\n    \"Entry\": {\n        \"name\": \"Entry\",\n        \"methods\": [\n            \"closeEntry\",\n            \"openEntry\"\n        ],\n        \"properties\": []\n    },\n    \"EntrySensor\": {\n        \"name\": \"EntrySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"entryOpen\"\n        ]\n    },\n    \"DeviceProvider\": {\n        \"name\": \"DeviceProvider\",\n        \"methods\": [\n            \"getDevice\",\n            \"releaseDevice\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceDiscovery\": {\n        \"name\": \"DeviceDiscovery\",\n        \"methods\": [\n            \"adoptDevice\",\n            \"discoverDevices\"\n        ],\n        \"properties\": []\n    },\n    \"DeviceCreator\": {\n        \"name\": \"DeviceCreator\",\n        \"methods\": [\n            \"createDevice\",\n            \"getCreateDeviceSettings\"\n        ],\n        \"properties\": []\n    },\n    \"Battery\": {\n        \"name\": \"Battery\",\n        \"methods\": [],\n        \"properties\": [\n            \"batteryLevel\"\n        ]\n    },\n    \"Charger\": {\n        \"name\": \"Charger\",\n        \"methods\": [],\n        \"properties\": [\n            \"chargeState\"\n        ]\n    },\n    \"Reboot\": {\n        \"name\": \"Reboot\",\n        \"methods\": [\n            \"reboot\"\n        ],\n        \"properties\": []\n    },\n    \"Refresh\": {\n        \"name\": \"Refresh\",\n        \"methods\": [\n            \"getRefreshFrequency\",\n            \"refresh\"\n        ],\n        \"properties\": []\n    },\n    \"MediaPlayer\": {\n        \"name\": \"MediaPlayer\",\n        \"methods\": [\n            \"getMediaStatus\",\n            \"load\",\n            \"seek\",\n            \"skipNext\",\n            \"skipPrevious\"\n        ],\n        \"properties\": []\n    },\n    \"Online\": {\n        \"name\": \"Online\",\n        \"methods\": [],\n        \"properties\": [\n            \"online\"\n        ]\n    },\n    \"BufferConverter\": {\n        \"name\": \"BufferConverter\",\n        \"methods\": [\n            \"convert\"\n        ],\n        \"properties\": [\n            \"fromMimeType\",\n            \"toMimeType\"\n        ]\n    },\n    \"MediaConverter\": {\n        \"name\": \"MediaConverter\",\n        \"methods\": [\n            \"convertMedia\"\n        ],\n        \"properties\": [\n            \"converters\"\n        ]\n    },\n    \"Settings\": {\n        \"name\": \"Settings\",\n        \"methods\": [\n            \"getSettings\",\n            \"putSetting\"\n        ],\n        \"properties\": []\n    },\n    \"BinarySensor\": {\n        \"name\": \"BinarySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"binaryState\"\n        ]\n    },\n    \"TamperSensor\": {\n        \"name\": \"TamperSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"tampered\"\n        ]\n    },\n    \"Sleep\": {\n        \"name\": \"Sleep\",\n        \"methods\": [],\n        \"properties\": [\n            \"sleeping\"\n        ]\n    },\n    \"PowerSensor\": {\n        \"name\": \"PowerSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"powerDetected\"\n        ]\n    },\n    \"AudioSensor\": {\n        \"name\": \"AudioSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"audioDetected\"\n        ]\n    },\n    \"MotionSensor\": {\n        \"name\": \"MotionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"motionDetected\"\n        ]\n    },\n    \"AmbientLightSensor\": {\n        \"name\": \"AmbientLightSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ambientLight\"\n        ]\n    },\n    \"OccupancySensor\": {\n        \"name\": \"OccupancySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"occupied\"\n        ]\n    },\n    \"FloodSensor\": {\n        \"name\": \"FloodSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"flooded\"\n        ]\n    },\n    \"UltravioletSensor\": {\n        \"name\": \"UltravioletSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"ultraviolet\"\n        ]\n    },\n    \"LuminanceSensor\": {\n        \"name\": \"LuminanceSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"luminance\"\n        ]\n    },\n    \"PositionSensor\": {\n        \"name\": \"PositionSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"position\"\n        ]\n    },\n    \"SecuritySystem\": {\n        \"name\": \"SecuritySystem\",\n        \"methods\": [\n            \"armSecuritySystem\",\n            \"disarmSecuritySystem\"\n        ],\n        \"properties\": [\n            \"securitySystemState\"\n        ]\n    },\n    \"PM10Sensor\": {\n        \"name\": \"PM10Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm10Density\"\n        ]\n    },\n    \"PM25Sensor\": {\n        \"name\": \"PM25Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"pm25Density\"\n        ]\n    },\n    \"VOCSensor\": {\n        \"name\": \"VOCSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"vocDensity\"\n        ]\n    },\n    \"NOXSensor\": {\n        \"name\": \"NOXSensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"noxDensity\"\n        ]\n    },\n    \"CO2Sensor\": {\n        \"name\": \"CO2Sensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"co2ppm\"\n        ]\n    },\n    \"AirQualitySensor\": {\n        \"name\": \"AirQualitySensor\",\n        \"methods\": [],\n        \"properties\": [\n            \"airQuality\"\n        ]\n    },\n    \"AirPurifier\": {\n        \"name\": \"AirPurifier\",\n        \"methods\": [\n            \"setAirPurifierState\"\n        ],\n        \"properties\": [\n            \"airPurifierState\"\n        ]\n    },\n    \"FilterMaintenance\": {\n        \"name\": \"FilterMaintenance\",\n        \"methods\": [],\n        \"properties\": [\n            \"filterChangeIndication\",\n            \"filterLifeLevel\"\n        ]\n    },\n    \"Readme\": {\n        \"name\": \"Readme\",\n        \"methods\": [\n            \"getReadmeMarkdown\"\n        ],\n        \"properties\": []\n    },\n    \"OauthClient\": {\n        \"name\": \"OauthClient\",\n        \"methods\": [\n            \"getOauthUrl\",\n            \"onOauthCallback\"\n        ],\n        \"properties\": []\n    },\n    \"MixinProvider\": {\n        \"name\": \"MixinProvider\",\n        \"methods\": [\n            \"canMixin\",\n            \"getMixin\",\n            \"releaseMixin\"\n        ],\n        \"properties\": []\n    },\n    \"HttpRequestHandler\": {\n        \"name\": \"HttpRequestHandler\",\n        \"methods\": [\n            \"onRequest\"\n        ],\n        \"properties\": []\n    },\n    \"EngineIOHandler\": {\n        \"name\": \"EngineIOHandler\",\n        \"methods\": [\n            \"onConnection\"\n        ],\n        \"properties\": []\n    },\n    \"PushHandler\": {\n        \"name\": \"PushHandler\",\n        \"methods\": [\n            \"onPush\"\n        ],\n        \"properties\": []\n    },\n    \"Program\": {\n        \"name\": \"Program\",\n        \"methods\": [\n            \"run\"\n        ],\n        \"properties\": []\n    },\n    \"Scriptable\": {\n        \"name\": \"Scriptable\",\n        \"methods\": [\n            \"eval\",\n            \"loadScripts\",\n            \"saveScript\"\n        ],\n        \"properties\": []\n    },\n    \"ClusterForkInterface\": {\n        \"name\": \"ClusterForkInterface\",\n        \"methods\": [\n            \"forkInterface\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectTracker\": {\n        \"name\": \"ObjectTracker\",\n        \"methods\": [\n            \"trackObjects\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetector\": {\n        \"name\": \"ObjectDetector\",\n        \"methods\": [\n            \"getDetectionInput\",\n            \"getObjectTypes\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetection\": {\n        \"name\": \"ObjectDetection\",\n        \"methods\": [\n            \"detectObjects\",\n            \"generateObjectDetections\",\n            \"getDetectionModel\"\n        ],\n        \"properties\": []\n    },\n    \"ObjectDetectionPreview\": {\n        \"name\": \"ObjectDetectionPreview\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ObjectDetectionGenerator\": {\n        \"name\": \"ObjectDetectionGenerator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"HumiditySetting\": {\n        \"name\": \"HumiditySetting\",\n        \"methods\": [\n            \"setHumidity\"\n        ],\n        \"properties\": [\n            \"humiditySetting\"\n        ]\n    },\n    \"Fan\": {\n        \"name\": \"Fan\",\n        \"methods\": [\n            \"setFan\"\n        ],\n        \"properties\": [\n            \"fan\"\n        ]\n    },\n    \"RTCSignalingChannel\": {\n        \"name\": \"RTCSignalingChannel\",\n        \"methods\": [\n            \"startRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"RTCSignalingClient\": {\n        \"name\": \"RTCSignalingClient\",\n        \"methods\": [\n            \"createRTCSignalingSession\"\n        ],\n        \"properties\": []\n    },\n    \"LauncherApplication\": {\n        \"name\": \"LauncherApplication\",\n        \"methods\": [],\n        \"properties\": [\n            \"applicationInfo\"\n        ]\n    },\n    \"ScryptedUser\": {\n        \"name\": \"ScryptedUser\",\n        \"methods\": [\n            \"getScryptedUserAccessControl\"\n        ],\n        \"properties\": []\n    },\n    \"VideoFrameGenerator\": {\n        \"name\": \"VideoFrameGenerator\",\n        \"methods\": [\n            \"generateVideoFrames\"\n        ],\n        \"properties\": []\n    },\n    \"StreamService\": {\n        \"name\": \"StreamService\",\n        \"methods\": [\n            \"connectStream\"\n        ],\n        \"properties\": []\n    },\n    \"TTY\": {\n        \"name\": \"TTY\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"TTYSettings\": {\n        \"name\": \"TTYSettings\",\n        \"methods\": [\n            \"getTTYSettings\"\n        ],\n        \"properties\": []\n    },\n    \"ScryptedSystemDevice\": {\n        \"name\": \"ScryptedSystemDevice\",\n        \"methods\": [],\n        \"properties\": [\n            \"systemDevice\"\n        ]\n    },\n    \"ScryptedDeviceCreator\": {\n        \"name\": \"ScryptedDeviceCreator\",\n        \"methods\": [],\n        \"properties\": []\n    },\n    \"ScryptedSettings\": {\n        \"name\": \"ScryptedSettings\",\n        \"methods\": [],\n        \"properties\": []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType || (exports.ScryptedDeviceType = ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode || (exports.HumidityMode = HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode || (exports.FanMode = FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit || (exports.TemperatureUnit = TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode || (exports.ThermostatMode = ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n    PanTiltZoomMovement[\"Continuous\"] = \"Continuous\";\n    PanTiltZoomMovement[\"Preset\"] = \"Preset\";\n    PanTiltZoomMovement[\"Home\"] = \"Home\";\n})(PanTiltZoomMovement || (exports.PanTiltZoomMovement = PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState || (exports.LockState = LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState || (exports.ChargeState = ChargeState = {}));\nvar AirPurifierStatus;\n(function (AirPurifierStatus) {\n    AirPurifierStatus[\"Inactive\"] = \"Inactive\";\n    AirPurifierStatus[\"Idle\"] = \"Idle\";\n    AirPurifierStatus[\"Active\"] = \"Active\";\n    AirPurifierStatus[\"ActiveNightMode\"] = \"ActiveNightMode\";\n})(AirPurifierStatus || (exports.AirPurifierStatus = AirPurifierStatus = {}));\nvar AirPurifierMode;\n(function (AirPurifierMode) {\n    AirPurifierMode[\"Manual\"] = \"Manual\";\n    AirPurifierMode[\"Automatic\"] = \"Automatic\";\n})(AirPurifierMode || (exports.AirPurifierMode = AirPurifierMode = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality || (exports.AirQuality = AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode || (exports.SecuritySystemMode = SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction || (exports.SecuritySystemObstruction = SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState || (exports.MediaPlayerState = MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"ScryptedPluginRuntime\"] = \"ScryptedPluginRuntime\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Buttons\"] = \"Buttons\";\n    ScryptedInterface[\"PressButtons\"] = \"PressButtons\";\n    ScryptedInterface[\"Sensors\"] = \"Sensors\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"AudioVolumeControl\"] = \"AudioVolumeControl\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoCameraMask\"] = \"VideoCameraMask\";\n    ScryptedInterface[\"VideoTextOverlays\"] = \"VideoTextOverlays\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"VideoRecorderManagement\"] = \"VideoRecorderManagement\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Reboot\"] = \"Reboot\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"MediaConverter\"] = \"MediaConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"Sleep\"] = \"Sleep\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedInterface[\"FilterMaintenance\"] = \"FilterMaintenance\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ClusterForkInterface\"] = \"ClusterForkInterface\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"ObjectDetectionPreview\"] = \"ObjectDetectionPreview\";\n    ScryptedInterface[\"ObjectDetectionGenerator\"] = \"ObjectDetectionGenerator\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n    ScryptedInterface[\"StreamService\"] = \"StreamService\";\n    ScryptedInterface[\"TTY\"] = \"TTY\";\n    ScryptedInterface[\"TTYSettings\"] = \"TTYSettings\";\n    ScryptedInterface[\"ScryptedSystemDevice\"] = \"ScryptedSystemDevice\";\n    ScryptedInterface[\"ScryptedDeviceCreator\"] = \"ScryptedDeviceCreator\";\n    ScryptedInterface[\"ScryptedSettings\"] = \"ScryptedSettings\";\n})(ScryptedInterface || (exports.ScryptedInterface = ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"ServerId\"] = \"text/x-server-id\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes || (exports.ScryptedMimeTypes = ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","import { TemperatureUnit } from \"@scrypted/sdk\";\n\nexport enum UnitGroup {\n    None = 'None',\n    Temperature = 'Temperature',\n    Speed = 'Speed',\n    Length = 'Length',\n    Pressure = 'Pressure',\n}\n\nexport enum Unit {\n    NONE = '',\n    // Temperature\n    // Actually Kelving is SI for temperature\n    C = '°C',\n    F = '°F',\n\n    // Speed\n    M_S = 'm/s',\n    KM_H = 'km/h',\n    MI_H = 'mph',\n\n    // Length\n    M = 'm',\n    MM = 'mm',\n    KM = 'km',\n    IN = 'in',\n    MI = 'mi',\n\n    // Pressure\n    PA = 'Pa',\n    HPA = 'hPa',\n    BAR = 'bar'\n}\n\nconst siUnitMap: Record<UnitGroup, Unit> = {\n    [UnitGroup.None]: Unit.NONE,\n    [UnitGroup.Length]: Unit.M,\n    [UnitGroup.Pressure]: Unit.PA,\n    [UnitGroup.Temperature]: Unit.C,\n    [UnitGroup.Speed]: Unit.M_S,\n}\n\ninterface UnitData {\n    unit: Unit;\n    unitGroup: UnitGroup;\n    factor?: number;\n    conversionFormula?: string;\n}\n\nexport class UnitConverter {\n    static UNITS_MAP: Record<Unit, UnitData> = {\n        [Unit.NONE]: {\n            unit: Unit.NONE,\n            unitGroup: UnitGroup.Temperature,\n            factor: 1,\n        },\n        [Unit.C]: {\n            unit: Unit.C,\n            unitGroup: UnitGroup.Temperature,\n            factor: 1,\n        },\n        [Unit.F]: {\n            unit: Unit.F,\n            unitGroup: UnitGroup.Temperature,\n            conversionFormula: '{fromSi} ? ({value} * 1.8 + 32) : (({value} - 32) / 1.8)',\n        },\n        [Unit.M_S]: {\n            unit: Unit.M_S,\n            unitGroup: UnitGroup.Speed,\n            factor: 1,\n        },\n        [Unit.KM_H]: {\n            unit: Unit.KM_H,\n            unitGroup: UnitGroup.Speed,\n            factor: 0.277777777777778,\n        },\n        [Unit.MI_H]: {\n            unit: Unit.MI_H,\n            unitGroup: UnitGroup.Speed,\n            factor: 0.447038888888889,\n        },\n        [Unit.M]: {\n            unit: Unit.M,\n            unitGroup: UnitGroup.Length,\n            factor: 1,\n        },\n        [Unit.MM]: {\n            unit: Unit.MM,\n            unitGroup: UnitGroup.Length,\n            factor: 0.001,\n        },\n        [Unit.KM]: {\n            unit: Unit.KM,\n            unitGroup: UnitGroup.Length,\n            factor: 1000,\n        },\n        [Unit.IN]: {\n            unit: Unit.IN,\n            unitGroup: UnitGroup.Length,\n            factor: 0.0254,\n        },\n        [Unit.MI]: {\n            unit: Unit.MI,\n            unitGroup: UnitGroup.Length,\n            factor: 1609.34,\n        },\n        [Unit.PA]: {\n            unit: Unit.PA,\n            unitGroup: UnitGroup.Pressure,\n            factor: 1,\n        },\n        [Unit.HPA]: {\n            unit: Unit.HPA,\n            unitGroup: UnitGroup.Pressure,\n            factor: 0.01,\n        },\n        [Unit.BAR]: {\n            unit: Unit.BAR,\n            unitGroup: UnitGroup.Pressure,\n            factor: 0.00001,\n        },\n    }\n\n    static getUnit(\n        unitSrc: UnitData | Unit | string | undefined,\n    ): UnitData {\n        if (!unitSrc) {\n            unitSrc = UnitConverter.UNITS_MAP[Unit.NONE];\n        }\n\n        const unit =\n            typeof unitSrc === 'string' ? unitSrc : unitSrc.unit;\n\n        const unitData = UnitConverter.UNITS_MAP?.[unit];\n        if (!unitData) {\n            return {\n                factor: 1,\n                unit: unit as Unit,\n                unitGroup: UnitGroup.None,\n            };\n        } else {\n            return unitData;\n        }\n    }\n\n    static siToLocal(\n        siValue: number,\n        unit: UnitData | Unit | undefined,\n    ) {\n        if (isNaN(siValue)) {\n            return 0;\n        }\n\n        const unitData = UnitConverter.getUnit(unit);\n\n        if (!unitData) {\n            return siValue;\n        }\n\n        const value = unitData.conversionFormula ?\n            eval(\n                unitData.conversionFormula\n                    .replaceAll('{fromSi}', 'true')\n                    .replaceAll('{value}', String(siValue)),\n            ) :\n            siValue / unitData.factor;\n\n        if (!isNaN(value)) {\n            return value;\n        } else {\n            return 0;\n        }\n    }\n\n    static localToSi(\n        localValue: number,\n        unit: UnitData | Unit | undefined,\n    ) {\n        const unitData = UnitConverter.getUnit(unit);\n\n        if (!unitData) {\n            return localValue;\n        }\n\n        const value = unitData.conversionFormula ?\n            eval(\n                unitData.conversionFormula\n                    .replaceAll('{fromSi}', 'false')\n                    .replaceAll('{value}', String(localValue)),\n            ) :\n            localValue * unitData.factor\n\n        if (!isNaN(value)) {\n            return value;\n        } else {\n            return 0;\n        }\n    }\n\n    static getUnits(\n        unit: UnitData | Unit | string | undefined,\n    ) {\n        const unitData = UnitConverter.getUnit(unit);\n\n        if (!unitData) {\n            return [];\n        }\n\n        const { unitGroup } = unitData;\n\n        return Object.values(UnitConverter.UNITS_MAP)\n            .filter(unit => unit.unitGroup === unitGroup && unit.unit)\n            ?.map(unit => unit.unit);\n\n    }\n}\n","import sdk, { Battery, ObjectsDetected, ScryptedDeviceBase, ScryptedInterface, Setting, Settings, SettingValue, Sleep, VideoTextOverlays } from \"@scrypted/sdk\";\nimport { SettingsMixinDeviceBase, SettingsMixinDeviceOptions } from \"@scrypted/sdk/settings-mixin\";\nimport { StorageSettings, StorageSettingsDict } from \"@scrypted/sdk/storage-settings\";\nimport OsdManagerProvider from \"./main\";\nimport { CameraOverlay, convertSettingsToStorageSettings, getOverlay, getOverlayKeys, getOverlaySettings, ListenersMap, ListenerType, osdManagerPrefix, OverlayType, parseOverlayData, pluginEnabledFilter } from \"./utils\";\n\nexport type CameraType = ScryptedDeviceBase & VideoTextOverlays & Settings & Sleep & Battery;\n\nexport default class OsdManagerMixin extends SettingsMixinDeviceBase<any> implements Settings {\n    initStorage: StorageSettingsDict<string> = {\n        duplicateFromDevice: {\n            title: 'Duplicate from device',\n            description: 'Duplicate OSD information from another devices enabled on the plugin',\n            type: 'device',\n            deviceFilter: pluginEnabledFilter,\n            immediate: true,\n            onPut: async (_, value) => await this.duplicateFromDevice(value)\n        },\n    };\n    storageSettings = new StorageSettings(this, this.initStorage);\n\n    killed: boolean;\n    overlays: CameraOverlay[] = [];\n    listenersMap: ListenersMap = {};\n    cameraDevice: CameraType;\n\n    constructor(options: SettingsMixinDeviceOptions<any>, private plugin: OsdManagerProvider) {\n        super(options);\n\n        this.plugin.mixinsMap[this.id] = this;\n        this.cameraDevice = sdk.systemManager.getDeviceById<CameraType>(this.id);\n        setTimeout(async () => !this.killed && await this.init(), 2000);\n    }\n\n    removeListeners() {\n        try {\n            Object.values(this.listenersMap).forEach(({ listener }) => listener && listener.removeListener());\n        } catch (e) {\n            this.console.error('Error in removeListeners', e);\n        }\n    }\n\n    async release() {\n        this.killed = true;\n        this.removeListeners();\n    }\n\n    async refreshSettings() {\n        this.console.log('Refreshing settings');\n        await this.getOverlayData();\n\n        const dynamicSettings = getOverlaySettings({\n            storage: this.storageSettings,\n            overlays: this.overlays,\n            device: this,\n            logger: this.console,\n        });\n\n        this.storageSettings = await convertSettingsToStorageSettings({\n            device: this,\n            dynamicSettings,\n            initStorage: this.initStorage\n        });\n\n        this.removeListeners();\n        this.start();\n    }\n\n    async getMixinSettings(): Promise<Setting[]> {\n        return this.storageSettings.getSettings();\n    }\n\n    async putSetting(key: string, value: SettingValue): Promise<void> {\n        const [group, ...rest] = key.split(':');\n        if (group === osdManagerPrefix) {\n            this.storageSettings.putSetting(rest.join(':'), value);\n        } else {\n            super.putSetting(key, value);\n        }\n    }\n\n    async putMixinSetting(key: string, value: string) {\n        this.storageSettings.putSetting(key, value);\n    }\n\n    async getOverlayData() {\n        try {\n            if (this.cameraDevice.sleeping) {\n                return;\n            }\n\n            const textOverlays = await this.cameraDevice.getVideoTextOverlays();\n            this.overlays = Object.entries(textOverlays)\n                .map(([id, overlay]) => {\n                    return {\n                        id,\n                        ...overlay,\n                    }\n                });\n\n            for (const overlay of this.overlays) {\n                const { currentText } = getOverlay({ overlayId: overlay.id, storageSettings: this.storageSettings });\n                const { currentTextKey } = getOverlayKeys(overlay.id);\n\n                await this.putMixinSetting(currentTextKey, currentText);\n            }\n        } catch (e) {\n            this.console.error('Error inr getOverlayData', e);\n        }\n    }\n\n    async duplicateFromDevice(deviceId: string) {\n        try {\n            const deviceToDuplicate = sdk.systemManager.getDeviceById<VideoTextOverlays & Settings>(deviceId);\n\n            if (deviceToDuplicate) {\n                const textOverlaysToDuplicate = await deviceToDuplicate.getVideoTextOverlays();\n\n                for (const [overlayId, data] of Object.entries(textOverlaysToDuplicate)) {\n                    if (!this.overlays.some(overlay => overlayId === overlay.id)) {\n                        continue;\n                    }\n\n                    const { device, type, regex, maxDecimals } = getOverlay({\n                        overlayId,\n                        storageSettings: this.plugin.mixinsMap[deviceId].storageSettings\n                    });\n                    const { deviceKey, typeKey, regexKey, maxDecimalsKey } = getOverlayKeys(overlayId);\n\n                    await this.putMixinSetting(deviceKey, device);\n                    await this.putMixinSetting(typeKey, type);\n                    await this.putMixinSetting(regexKey, regex);\n                    await this.putMixinSetting(maxDecimalsKey, String(maxDecimals));\n                }\n            }\n        } catch (e) {\n            this.console.error(`Error in duplicateFromDevice`, e);\n        }\n    }\n\n    private updateOverlayData = async (props: {\n        overlayId: string,\n        listenerType: ListenerType,\n        listenInterface?: ScryptedInterface | string,\n        data: any,\n    }) => {\n        const { overlayId, listenerType, data } = props;\n\n        if (this.cameraDevice.sleeping) {\n            return;\n        }\n\n        this.console.log(`Setting overlay data ${overlayId}: ${JSON.stringify({\n            listenerType,\n            data\n        })}`);\n\n        try {\n            const overlay = getOverlay({ overlayId, storageSettings: this.storageSettings });\n            const textToUpdate = parseOverlayData({ data, listenerType, overlay, plugin: this.plugin, logger: this.console });\n\n            if (textToUpdate) {\n                await this.cameraDevice.setVideoTextOverlay(overlayId, { text: textToUpdate });\n            } else if (overlay.type === OverlayType.Disabled) {\n                await this.cameraDevice.setVideoTextOverlay(overlayId, { text: false });\n            }\n        } catch (e) {\n            this.console.error('Error in updateOverlayData', e);\n        }\n    }\n\n    async start() {\n        for (const cameraOverlay of this.overlays) {\n            const overlayId = cameraOverlay.id;\n            const overlay = getOverlay({\n                overlayId,\n                storageSettings: this.storageSettings\n            });\n\n            const overlayType = overlay.type;\n            let listenerType: ListenerType;\n            let listenInterface: ScryptedInterface | string;\n            let deviceId: string;\n\n            if (overlayType === OverlayType.Device) {\n                const realDevice = sdk.systemManager.getDeviceById(overlay.device);\n\n                if (realDevice) {\n                    if (realDevice.interfaces.includes(ScryptedInterface.Sensors)) {\n                        if (overlay.sensorId) {\n                            listenerType = ListenerType.Sensors;\n                            listenInterface = overlay.sensorId;\n                            deviceId = overlay.device;\n                        }\n                    } else if (realDevice.interfaces.includes(ScryptedInterface.Thermometer)) {\n                        listenerType = ListenerType.Temperature;\n                        listenInterface = ScryptedInterface.Thermometer;\n                        deviceId = overlay.device;\n                    } else if (realDevice.interfaces.includes(ScryptedInterface.HumiditySensor)) {\n                        listenerType = ListenerType.Humidity;\n                        listenInterface = ScryptedInterface.HumiditySensor;\n                        deviceId = overlay.device;\n                    } else if (realDevice.interfaces.includes(ScryptedInterface.Lock)) {\n                        listenerType = ListenerType.Lock;\n                        listenInterface = ScryptedInterface.Lock;\n                        deviceId = overlay.device;\n                    } else if (realDevice.interfaces.includes(ScryptedInterface.EntrySensor)) {\n                        listenerType = ListenerType.Entry;\n                        listenInterface = ScryptedInterface.EntrySensor;\n                        deviceId = overlay.device;\n                    }\n                } else {\n                    this.console.log(`Device ${overlay.device} not found`);\n                }\n            } else if (overlayType === OverlayType.FaceDetection) {\n                listenerType = ListenerType.Face;\n                listenInterface = ScryptedInterface.ObjectDetection;\n                deviceId = this.id;\n            } else if (overlayType === OverlayType.BatteryLeft) {\n                listenerType = ListenerType.Battery;\n                listenInterface = ScryptedInterface.Battery;\n                deviceId = this.id;\n            }\n\n            this.console.log(`Settings for overlay ${overlayId}: ${JSON.stringify({ overlayId, overlayType, listenerType, listenInterface, deviceId })}`);\n            this.listenersMap[overlayId]?.listener && this.listenersMap[overlayId].listener.removeListener();\n            if (listenerType) {\n                if (listenInterface && deviceId) {\n                    const realDevice = sdk.systemManager.getDeviceById<ScryptedDeviceBase>(deviceId);\n                    this.console.log(`Overlay ${overlayId}: starting device ${realDevice.name} listener for type ${listenerType} on interface ${listenInterface}`);\n                    const update = async (data: any) => await this.updateOverlayData({\n                        listenInterface,\n                        overlayId,\n                        data,\n                        listenerType,\n                    });\n                    const newListener = realDevice.listen(listenInterface, async (_, __, data) => {\n                        await update(data);\n                    });\n\n                    if (listenerType === ListenerType.Sensors) {\n                        update(realDevice.sensors?.[listenInterface]);\n                    } else if (listenInterface === ScryptedInterface.Thermometer) {\n                        update(realDevice.temperature);\n                    } else if (listenInterface === ScryptedInterface.HumiditySensor) {\n                        update(realDevice.humidity);\n                    } else if (listenInterface === ScryptedInterface.Lock) {\n                        update(realDevice.lockState);\n                    } else if (listenInterface === ScryptedInterface.EntrySensor) {\n                        update(realDevice.entryOpen);\n                    } else if (listenInterface === ScryptedInterface.Battery) {\n                        update(realDevice.batteryLevel);\n                    } else if (listenInterface === ScryptedInterface.ObjectDetection) {\n                        update({ detections: [{ className: 'face', label: '-' }] } as ObjectsDetected);\n                    }\n\n                    this.listenersMap[overlayId] = {\n                        listenerType,\n                        device: overlay.device,\n                        listener: newListener\n                    };\n                }\n            } else if (overlayType === OverlayType.Text) {\n                this.updateOverlayData({\n                    overlayId,\n                    listenerType,\n                    data: overlay.text,\n                });\n            } else if (overlayType === OverlayType.Disabled) {\n                this.updateOverlayData({\n                    overlayId,\n                    listenerType,\n                    data: '',\n                });\n            }\n\n            // if (this.cameraDevice.interfaces.includes(ScryptedInterface.Sleep)) {\n            //     const realDevice = sdk.systemManager.getDeviceById<ScryptedDeviceBase>(this.id);\n            //     this.listenersMap[ScryptedInterface.Sleep] = {\n            //         listener: realDevice.listen(ScryptedInterface.Sleep, async (_, __, data) => {\n            //             this.console.log('Camera woke up, updating ovelays', data);\n            //         }),\n            //         listenerType: ListenerType.Battery,\n            //         device: this.id\n            //     }\n            // }\n        }\n    }\n\n    async init() {\n        try {\n            await this.refreshSettings();\n            await this.start();\n        } catch (e) {\n            this.console.error('Error in init', e);\n        }\n    }\n}","import sdk, { Settings, DeviceBase, MixinProvider, ScryptedDeviceBase, ScryptedDeviceType, ScryptedInterface, WritableDeviceState, Setting, SettingValue } from \"@scrypted/sdk\";\nimport OsdManagerMixin from \"./cameraMixin\";\nimport { osdManagerPrefix } from \"./utils\";\nimport { StorageSettings } from \"@scrypted/sdk/storage-settings\";\n\nexport default class OsdManagerProvider extends ScryptedDeviceBase implements MixinProvider, Settings {\n    storageSettings = new StorageSettings(this, {\n        lockText: {\n            title: 'Text to show for Locked state',\n            type: 'string',\n            defaultValue: 'Locked',\n        },\n        unlockText: {\n            title: 'Text to show for Unlocked state',\n            type: 'string',\n            defaultValue: 'Unlocked',\n        },\n        openText: {\n            title: 'Text to show for Open state',\n            type: 'string',\n            defaultValue: 'Open',\n        },\n        closedText: {\n            title: 'Text to show for Closed state',\n            type: 'string',\n            defaultValue: 'Closed',\n        },\n    });\n\n    public mixinsMap: Record<string, OsdManagerMixin> = {};\n\n    constructor(nativeId: string) {\n        super(nativeId);\n    }\n\n    getSettings(): Promise<Setting[]> {\n        return this.storageSettings.getSettings();\n    }\n\n    putSetting(key: string, value: SettingValue): Promise<void> {\n        return this.storageSettings.putSetting(key, value);\n    }\n\n    async canMixin(type: ScryptedDeviceType, interfaces: string[]): Promise<string[]> {\n        return interfaces.includes(ScryptedInterface.VideoTextOverlays) ?\n            [\n                ScryptedInterface.Settings,\n            ] :\n            undefined;\n    }\n\n    async getMixin(mixinDevice: DeviceBase, mixinDeviceInterfaces: ScryptedInterface[], mixinDeviceState: WritableDeviceState): Promise<any> {\n        return new OsdManagerMixin(\n            {\n                mixinDevice,\n                mixinDeviceInterfaces,\n                mixinDeviceState,\n                mixinProviderNativeId: this.nativeId,\n                group: 'OSD manager',\n                groupKey: osdManagerPrefix,\n            },\n            this);\n    }\n\n    async releaseMixin(id: string, mixinDevice: any): Promise<void> {\n        await mixinDevice.release();\n    }\n}","import sdk, { EventListenerRegister, HumiditySensor, Lock, LockState, ObjectsDetected, ScryptedDeviceBase, ScryptedInterface, Sensors, Setting, TemperatureUnit, Thermometer, VideoTextOverlay } from \"@scrypted/sdk\";\nimport { StorageSetting, StorageSettings, StorageSettingsDevice, StorageSettingsDict } from \"@scrypted/sdk/storage-settings\";\nimport OsdManagerMixin, { CameraType } from \"./cameraMixin\";\nimport OsdManagerProvider from \"./main\";\nimport { UnitConverter } from '../../scrypted-homeassistant/src/unitConverter';\n\nexport const deviceFilter = `['${ScryptedInterface.Thermometer}','${ScryptedInterface.HumiditySensor}','${ScryptedInterface.Lock}','${ScryptedInterface.EntrySensor}','${ScryptedInterface.Sensors}'].some(elem => interfaces.includes(elem))`;\nexport const pluginEnabledFilter = `interfaces.includes('${ScryptedInterface.VideoTextOverlays}')`;\nexport const osdManagerPrefix = 'osdManager';\n\nexport type CameraOverlay = VideoTextOverlay & { id: string };\nexport type SupportedDevice = ScryptedDeviceBase & (Thermometer | HumiditySensor | Lock);\nexport enum OverlayType {\n    Disabled = 'Disabled',\n    Text = 'Text',\n    Device = 'Device',\n    FaceDetection = 'FaceDetection',\n    BatteryLeft = 'BatteryLeft',\n}\n\ninterface Overlay {\n    currentText: string;\n    text: string;\n    type: OverlayType;\n    device: string;\n    regex: string;\n    maxDecimals: number;\n    unit?: string;\n    sensorId?: string;\n}\n\nexport enum ListenerType {\n    Face = 'Face',\n    Humidity = 'Humidity',\n    Temperature = 'Temperature',\n    Lock = 'Lock',\n    Battery = 'Battery',\n    Sleep = 'Sleep',\n    Entry = 'Entry',\n    Sensors = 'Sensors'\n}\n\nexport type ListenersMap = Record<string, { listenerType: ListenerType, listener: EventListenerRegister, device?: string }>;\n\nexport const getFriendlyTitle = (props: {\n    rawTitle: string,\n    device: OsdManagerMixin,\n}) => {\n    const { device, rawTitle } = props;\n    if (device.pluginId === '@scrypted/amcrest') {\n        return rawTitle\n            .replace(/^table\\.VideoWidget\\[\\d+\\]\\./, '');\n    } else {\n        return `Overlay ${rawTitle}`;\n    }\n}\n\nexport const getOverlayKeys = (overlayId: string) => {\n    const currentTextKey = `overlay:${overlayId}:currentText`;\n    const textKey = `overlay:${overlayId}:text`;\n    const typeKey = `overlay:${overlayId}:type`;\n    const regexKey = `overlay:${overlayId}:regex`;\n    const deviceKey = `overlay:${overlayId}:device`;\n    const maxDecimalsKey = `overlay:${overlayId}:maxDecimals`;\n    const sensorIdKey = `overlay:${overlayId}:sensorId`;\n    const sensorNameKey = `overlay:${overlayId}:sensorName`;\n    const unitKey = `overlay:${overlayId}:unit`;\n\n    return {\n        currentTextKey,\n        textKey,\n        typeKey,\n        regexKey,\n        deviceKey,\n        maxDecimalsKey,\n        sensorIdKey,\n        sensorNameKey,\n        unitKey,\n    }\n}\n\nexport const getOverlaySettings = (props: {\n    storage: StorageSettings<any>,\n    overlays: CameraOverlay[],\n    device: OsdManagerMixin,\n    logger: Console,\n}) => {\n    const { storage, overlays, device, logger } = props;\n    const settings: StorageSetting[] = [];\n\n    for (const overlay of overlays) {\n        const rawTitle = `${overlay.id}`;\n        const friendlyTitle = getFriendlyTitle({\n            rawTitle,\n            device,\n        });\n        const overlayName = friendlyTitle;\n\n        const {\n            currentTextKey,\n            deviceKey,\n            typeKey,\n            regexKey,\n            textKey,\n            maxDecimalsKey,\n            sensorNameKey,\n            sensorIdKey,\n            unitKey\n        } = getOverlayKeys(overlay.id);\n\n        settings.push(\n            {\n                key: currentTextKey,\n                title: 'Current Content',\n                type: 'string',\n                subgroup: overlayName,\n                readonly: true,\n            }\n        )\n        if (overlay.readonly) {\n            settings.push(\n                {\n                    title: 'Readonly',\n                    type: 'boolean',\n                    subgroup: overlayName,\n                    value: true,\n                    readonly: true,\n                }\n            );\n\n            continue;\n        }\n        const type = storage.getItem(typeKey) ?? OverlayType.Text;\n\n        settings.push(\n            {\n                key: typeKey,\n                title: 'Overlay Type',\n                type: 'string',\n                choices: Object.values(OverlayType),\n                defaultValue: OverlayType.Text,\n                subgroup: overlayName,\n                immediate: true,\n                onPut: async () => await device.refreshSettings(),\n            }\n        );\n\n        if (type === OverlayType.Disabled) {\n            continue;\n        }\n\n        if (type === OverlayType.Text) {\n            settings.push({\n                key: textKey,\n                title: 'Text',\n                type: 'string',\n                subgroup: overlayName,\n                onPut: async () => await device.refreshSettings(),\n            })\n        };\n\n        const regexSetting: StorageSetting = {\n            key: regexKey,\n            title: 'Value Regex',\n            description: 'Expression to generate the text. ${value} contains the value and ${unit} the unit',\n            type: 'string',\n            subgroup: overlayName,\n            placeholder: '${value} ${unit}',\n            defaultValue: '${value} ${unit}',\n            onPut: async () => await device.refreshSettings(),\n        };\n        const precisionSetting: StorageSetting = {\n            key: maxDecimalsKey,\n            title: 'Max Decimals',\n            type: 'number',\n            subgroup: overlayName,\n            defaultValue: 1,\n            onPut: async () => await device.refreshSettings(),\n        };\n\n        if (type === OverlayType.Device) {\n            settings.push(\n                {\n                    key: deviceKey,\n                    title: 'Device',\n                    type: 'device',\n                    subgroup: overlayName,\n                    deviceFilter,\n                    immediate: true,\n                    onPut: async (_, value) => {\n                        logger.log('Refreshing', value);\n                        await storage.putSetting(sensorIdKey, undefined);\n                        await storage.putSetting(unitKey, undefined);\n                        await device.refreshSettings();\n                    }\n                },\n            );\n\n            const selectedDevice = storage.getItem(deviceKey) as ScryptedDeviceBase | string;\n            const selectedDeviceId = typeof selectedDevice === 'string' ? selectedDevice : selectedDevice.id;\n            const actualDevice = selectedDeviceId ? sdk.systemManager.getDeviceById<ScryptedDeviceBase & Sensors>(selectedDeviceId) : undefined;\n\n            if (actualDevice?.interfaces.includes(ScryptedInterface.Sensors)) {\n                const sensors = Object.entries(actualDevice.sensors ?? {});\n                const sensorNames = sensors.map(([_, item]) => item.name).sort();\n                settings.push(\n                    {\n                        key: sensorIdKey,\n                        title: 'Sensor ID',\n                        type: 'string',\n                        subgroup: overlayName,\n                        hide: true,\n                    },\n                    {\n                        key: sensorNameKey,\n                        title: 'Sensor',\n                        type: 'string',\n                        subgroup: overlayName,\n                        immediate: true,\n                        choices: sensorNames,\n                        onPut: async (_, value) => {\n                            const sensorFound = sensors.find(([_, item]) => item.name === value);\n\n                            await storage.putSetting(sensorIdKey, sensorFound?.[0]);\n                            await storage.putSetting(unitKey, undefined);\n                            await device.refreshSettings();\n                        }\n                    },\n                );\n\n                const selectedSensorId = storage.getItem(sensorIdKey) as string;\n                if (selectedSensorId) {\n                    const sensorFound = sensors.find(([id]) => id === selectedSensorId);\n                    if (sensorFound) {\n                        const { unit } = sensorFound[1];\n                        const possibleUnits = UnitConverter.getUnits(unit);\n                        settings.push(\n                            {\n                                key: unitKey,\n                                title: 'Unit',\n                                type: 'string',\n                                subgroup: overlayName,\n                                immediate: true,\n                                choices: possibleUnits,\n                                onPut: async () => await device.refreshSettings(),\n                            }\n                        );\n                    }\n                }\n            }\n\n            settings.push(\n                regexSetting,\n                precisionSetting,\n            );\n        } else if (type === OverlayType.FaceDetection) {\n            settings.push(regexSetting);\n        } else if (type === OverlayType.BatteryLeft) {\n            settings.push(regexSetting, precisionSetting);\n        }\n    }\n\n    return settings;\n}\n\nexport const getOverlay = (props: {\n    storageSettings: StorageSettings<string>,\n    overlayId: string\n}): Overlay => {\n    const { storageSettings, overlayId } = props;\n\n    const {\n        currentTextKey,\n        deviceKey,\n        typeKey,\n        regexKey,\n        textKey,\n        maxDecimalsKey,\n        sensorIdKey,\n        unitKey\n    } = getOverlayKeys(overlayId);\n\n    const currentText = storageSettings.values[currentTextKey];\n    const type = storageSettings.values[typeKey];\n    const device = storageSettings.values[deviceKey]?.id;\n    const text = storageSettings.values[textKey];\n    const regex = storageSettings.values[regexKey];\n    const maxDecimals = storageSettings.values[maxDecimalsKey];\n    const sensorId = storageSettings.values[sensorIdKey];\n    const unit = storageSettings.values[unitKey];\n\n    return {\n        currentText,\n        device,\n        type,\n        regex,\n        text,\n        maxDecimals,\n        sensorId,\n        unit,\n    };\n}\n\nexport const parseOverlayData = (props: {\n    listenerType: ListenerType,\n    data: any,\n    overlay: Overlay,\n    plugin: OsdManagerProvider,\n    logger: Console,\n}) => {\n    const { listenerType, data, overlay, plugin, logger } = props;\n    const { regex, text, device, maxDecimals } = overlay;\n    const realDevice = device ? sdk.systemManager.getDeviceById<SupportedDevice>(device) : undefined;\n\n    const formatValue = (value: any) => {\n        const factor = Math.pow(10, maxDecimals);\n        return Math.round(Number(value ?? 0) * factor) / factor;\n    };\n\n    let value;\n    let unit;\n    let textToUpdate = text;\n    if (listenerType === ListenerType.Face) {\n        value = (data as ObjectsDetected)?.detections?.find(det => det.className === 'face')?.label;\n    } else if (listenerType === ListenerType.Temperature) {\n        unit = realDevice.temperatureUnit ?? TemperatureUnit.C;\n\n        value = data;\n        if (unit === TemperatureUnit.F) {\n            value = data * 9 / 5 + 32;\n        }\n\n        value = formatValue(value);\n    } else if (listenerType === ListenerType.Humidity) {\n        value = formatValue(data);\n        unit = '%';\n    } else if (listenerType === ListenerType.Battery) {\n        value = formatValue(data);\n        unit = '%';\n    } else if (listenerType === ListenerType.Lock) {\n        textToUpdate = data === LockState.Locked ? plugin.storageSettings.values.lockText : plugin.storageSettings.values.unlockText;\n    } else if (listenerType === ListenerType.Entry) {\n        textToUpdate = data ? plugin.storageSettings.values.closedText : plugin.storageSettings.values.openText;\n    } else if (listenerType === ListenerType.Sensors) {\n        unit = overlay.unit ?? data.unit;\n        const localValue = UnitConverter.siToLocal(data?.value, unit);\n        value = formatValue(localValue);\n    }\n\n\n    if (value != undefined) {\n        textToUpdate = regex\n            .replace('${value}', value || '')\n            .replace('${unit}', unit || '');\n    }\n\n    return textToUpdate;\n}\n\nexport const convertSettingsToStorageSettings = async (props: {\n    device: StorageSettingsDevice,\n    dynamicSettings: StorageSetting[],\n    initStorage: StorageSettingsDict<string>\n}) => {\n    const { device, dynamicSettings, initStorage } = props;\n\n    const onPutToRestore: Record<string, any> = {};\n    Object.entries(initStorage).forEach(([key, setting]) => {\n        if (setting.onPut) {\n            onPutToRestore[key] = setting.onPut;\n        }\n    });\n\n    const settings: StorageSetting[] = await new StorageSettings(device, initStorage).getSettings();\n\n    settings.push(...dynamicSettings);\n\n    const deviceSettings: StorageSettingsDict<string> = {};\n\n    for (const setting of settings) {\n        const { value, key, onPut, ...rest } = setting;\n        deviceSettings[key] = {\n            ...rest\n        };\n        if (setting.onPut) {\n            deviceSettings[key].onPut = setting.onPut.bind(device)\n        }\n    }\n\n    const updateStorageSettings = new StorageSettings(device, deviceSettings);\n\n    Object.entries(onPutToRestore).forEach(([key, onPut]) => {\n        updateStorageSettings.settings[key].onPut = onPut;\n    });\n\n    return updateStorageSettings;\n}","module.exports = require(\"module\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(927);\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","sdk","MixinDeviceBase","ScryptedDeviceBase","index_1","DeviceBase","constructor","nativeId","super","storage","_storage","deviceManager","getDeviceStorage","log","_log","getDeviceLogger","console","_console","getDeviceConsole","createMediaObject","data","mimeType","mediaManager","sourceId","id","getMediaObjectConsole","mediaObject","getMixinConsole","_lazyLoadDeviceState","_deviceState","getDeviceState","onDeviceEvent","eventInterface","eventData","options","_listeners","Set","mixinDevice","mixinDeviceInterfaces","mixinStorageSuffix","mixinDeviceState","systemManager","getDeviceById","mixinProviderNativeId","__rpcproxy_traps_all_properties","createDeviceState","setState","mixinStorageKey","getMixinStorage","onMixinEvent","manageListener","listener","add","release","l","removeListener","_createGetState","state","_createSetState","warn","field","values","ScryptedInterfaceProperty","set","loaded","process","env","SCRYPTED_SDK_ES_MODULE","SCRYPTED_SDK_MODULE","cjsModule","SCRYPTED_SDK_CJS_MODULE","sdkModule","assign","getScryptedStatic","e","runtimeAPI","pluginRuntimeAPI","endpointManager","pluginHostAPI","setScryptedInterfaceDescriptors","TYPES_VERSION","ScryptedInterfaceDescriptors","catch","error","__setModuleDefault","v","__importStar","mod","result","SettingsMixinDeviceBase","_1","default","settingsGroup","group","settingsGroupKey","groupKey","nextTick","ScryptedInterface","Settings","getSettings","settingsPromise","includes","mixinSettingsPromise","getMixinSettings","allSettings","settings","push","name","description","key","Math","random","toString","title","readonly","mixinSettings","setting","putSetting","prefix","startsWith","putMixinSetting","substring","length","StorageSettings","device","hasValue","keys","rawGet","getItem","type","JSON","parse","ret","onGet","entries","s","hide","getItemInternal","deviceFilter","onPut","mapPut","mapGet","oldValue","putSettingInternal","noStore","removeItem","setItem","stringify","rawDevice","readDefaultValue","multiple","n","parseFloat","isNaN","parseInt","json","parseValue","persistedDefaultValue","defaultValue","webpackEmptyContext","req","Error","code","resolve","module","ScryptedMimeTypes","MediaPlayerState","SecuritySystemObstruction","SecuritySystemMode","AirQuality","AirPurifierMode","AirPurifierStatus","ChargeState","LockState","PanTiltZoomMovement","ThermostatMode","TemperatureUnit","FanMode","HumidityMode","ScryptedDeviceType","ScryptedInterfaceMethod","UnitGroup","Unit","siUnitMap","None","NONE","Length","M","Pressure","PA","Temperature","C","Speed","M_S","UnitConverter","getUnit","unitSrc","UNITS_MAP","unit","unitData","factor","unitGroup","siToLocal","siValue","conversionFormula","eval","replaceAll","String","localToSi","localValue","getUnits","filter","map","F","KM_H","MI_H","MM","KM","IN","MI","HPA","BAR","OsdManagerMixin","plugin","initStorage","duplicateFromDevice","pluginEnabledFilter","immediate","async","_","storageSettings","overlays","listenersMap","updateOverlayData","props","overlayId","listenerType","cameraDevice","sleeping","overlay","getOverlay","textToUpdate","parseOverlayData","logger","setVideoTextOverlay","text","OverlayType","Disabled","mixinsMap","setTimeout","killed","init","removeListeners","forEach","refreshSettings","getOverlayData","dynamicSettings","getOverlaySettings","convertSettingsToStorageSettings","start","rest","split","osdManagerPrefix","join","textOverlays","getVideoTextOverlays","currentText","currentTextKey","getOverlayKeys","deviceId","deviceToDuplicate","textOverlaysToDuplicate","some","regex","maxDecimals","deviceKey","typeKey","regexKey","maxDecimalsKey","cameraOverlay","overlayType","listenInterface","Device","realDevice","interfaces","Sensors","sensorId","ListenerType","Thermometer","HumiditySensor","Humidity","Lock","EntrySensor","Entry","FaceDetection","Face","ObjectDetection","BatteryLeft","Battery","update","newListener","listen","__","sensors","temperature","humidity","lockState","entryOpen","batteryLevel","detections","className","label","Text","OsdManagerProvider","lockText","unlockText","openText","closedText","canMixin","VideoTextOverlays","getMixin","releaseMixin","getFriendlyTitle","rawTitle","pluginId","replace","textKey","sensorIdKey","sensorNameKey","unitKey","overlayName","subgroup","choices","regexSetting","placeholder","precisionSetting","selectedDevice","selectedDeviceId","actualDevice","sensorNames","item","sort","sensorFound","find","selectedSensorId","possibleUnits","formatValue","pow","round","Number","det","temperatureUnit","Locked","onPutToRestore","deviceSettings","bind","updateStorageSettings","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","obj","prop","__webpack_exports__"],"sourceRoot":""}